(()=>{"use strict";function e(){try{const e=localStorage.getItem("solanaWalletPublicKey");if(e)return console.log("Found wallet public key in localStorage:",e),localStorage.removeItem("solanaWalletPublicKey"),"undefined"!=typeof chrome&&chrome.runtime&&chrome.runtime.id&&chrome.runtime.sendMessage({action:"walletConnected",publicKey:e,source:"github-pages"},function(e){if(chrome.runtime.lastError)return console.error("Error sending message:",chrome.runtime.lastError),!1;console.log("Wallet connection data sent to extension:",e)}),!0}catch(e){console.error("Error checking for wallet connection:",e)}return!1}if("undefined"!=typeof chrome&&chrome.runtime&&chrome.runtime.id){window.addEventListener("message",function(e){if(e.source!==window)return;const o=e.data;if(o.type&&"WALLET_CONNECTED"===o.type){console.log("Received wallet connection via postMessage:",o);const e=o.publicKey;e&&"undefined"!=typeof chrome&&chrome.runtime&&chrome.runtime.id&&chrome.runtime.sendMessage({action:"walletConnected",publicKey:e,source:"window-message"},function(e){chrome.runtime.lastError?console.error("Error sending message from window event:",chrome.runtime.lastError):console.log("Wallet connection data sent to extension from window event:",e)})}},!1),e()?console.log("Successfully processed wallet connection from GitHub Pages"):console.log("No wallet connection data found from GitHub Pages");const o=setInterval(()=>{e()&&(console.log("Detected wallet connection from GitHub Pages during polling"),clearInterval(o))},1e3);setTimeout(()=>{clearInterval(o)},6e4)}else console.log("GitHub Pages bridge script loaded but not running (not in extension context)")})();